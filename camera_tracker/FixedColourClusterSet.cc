
#include "FixedColourClusterSet.hh"

//----------------------------------------------------------------------
FixedColourClusterSet::FixedColourClusterSet()
{
  m_count = 6;
}
//----------------------------------------------------------------------
double* FixedColourClusterSet::covariance_inverse(int colour)
{
  static double matrix[][9] = {
    { 0.09984724765175, -0.06485142924418, 0.00054208763334, -0.06485142924418, 0.13522428337050, -0.02117262049133, 0.00054208763334, -0.02117262049133, 0.02803052678021 },
    { 0.19361011490013, -0.11254043819094, -0.01734634082303, -0.11254043819094, 0.12400316532866, 0.01351142491955, -0.01734634082303, 0.01351142491955, 0.00647555576935 },
    { 0.21728686662790, -0.09330171446886, -0.15634289017083, -0.09330171446886, 0.12913716704923, 0.03291541095420, -0.15634289017083, 0.03291541095420, 0.36586383431392 },
    { 0.07796213804496, -0.08697493127048, 0.01310556241659, -0.08697493127048, 0.12542862520686, -0.02902785416200, 0.01310556241659, -0.02902785416200, 0.01149735435519 },
    { 0.14899711555867, -0.15136367065370, 0.01321961907587, -0.15136367065370, 0.16256464838893, -0.01802061780082, 0.01321961907587, -0.01802061780082, 0.00614257278275 },
    { 0.02993610882172, -0.03268848498109, 0.00206539397382, -0.03268848498109, 0.04738663454460, -0.00977694813030, 0.00206539397382, -0.00977694813030, 0.00678341799617 }
  };
  
  return (colour < 0 || colour >= m_count)? 0 : matrix[colour];
}
//----------------------------------------------------------------------
double FixedColourClusterSet::mean(int colour, int channel)
{
  static double means[][3] = {
    { 79.0	,95.0	,208.0 },
    { 123.0	,161.0	,113.0 },
    { 230.0	,237.0	,253.0 },
    { 207.0	,209.0	,220.0 },
    { 146.0	,112.0	,57.0  },
    { 54.0	,42.0	,78.0  }
  };
  
  return (colour < 0 || colour >= m_count || channel < 0 || channel >= 3)?
    0.0 : means[colour][channel];
}
//----------------------------------------------------------------------
int FixedColourClusterSet::numbers(int i)
{
  static int numbers[] = {
    1541,
    520,
    2200,
    642,
    18956,
    960,
    -1};
  
  return (i < 0 || i >= m_count)? numbers[m_count] : numbers[i];
}
//----------------------------------------------------------------------
const char* FixedColourClusterSet::labels(int i)
{
  // array of string pointers?
  static char* name[] = {
    "blue",
    "green",
    "white",
    "silver",
    "floor",
    "black",
    "ILLEGAL COLOUR"};
  
  return (i < 0 || i >= m_count)? name[m_count] : name[i];
}
//----------------------------------------------------------------------
/**
 * Return the number of fixed clusters defined in this class
 */
int FixedColourClusterSet::count() const 
{ 
  return m_count; 
}




======================================================================
NRS.gui


----------------------------------------------------------------------
TOP PRIORITY
----------------------------------------------------------------------

* Node linking [started]

* Save and loading of links

* Handling QueryRoute message and associated replies (Tommy has done
  this for skeleton)

* Check, and maybe implement/fix, intelligent message route - ie, if a
  received PML messge has a non-empty route, then the message should be
  sent out of an available port immediately.

* GUI code doesn't seem to accept void as a type though - Tommy's Button
  doesn't have any outputs because its output type is
  void... (RER). (Think this is now fixed. DJS)

* PML processor must not reject message types it does not know about, or
  else, we can register all known node types with it? It would be easier
  though just to process each XML element received, without an ID check.

----------------------------------------------------------------------
MEDIUM PRIORITY
----------------------------------------------------------------------

* Ok, this is a minor design problem. Since display delegates are not
  inherited from Java GUI classes, there is now no invalidate method
  that can be called in such a method to force its visual update (and
  typically this is done in response to user or remote events).  Must
  change this: each display component should inherit from JComponent, or
  something. Current, the way it is working for the GuiNode is that it
  is the underlying canvas which is listening for changes to node, and
  then it repaints the rectangle of the display delegate for the node
  that has been updated (after receipt of a remote message). Look in
  BaseNetworkBrowser::nodeSyncChanged(...)

* When a network has been loaded, and a node is edited, all the
  attributes appear as strings. Type information (such as whether they
  are doubles or ints) has been lost. Restore this.

* Email from Tommy: I have found a small bug in the GUI, involving
  CSL. The GUI seems to complain about a Variable with a messageType of
  type 'void'. If I change it to Spike then it is ok. Richard said
  something about previous problems with basic types of the system?

* Make sure all changes to node and networks are relfected in the
  hasChanged(), and that the mainframe exit option is senitive to
  it. Perhaps a good approach would be to add changed listeners to event
  Node and NodeCollection, and the RootNetwork could observe all? Or, to
  save creating hundreds of objects, just have each item propagate it's
  "I've changed message" upwards? (and so each element has a boolean
  flag)? Two different approaches, and one perhaps much simpler than the
  other.

* For fast linking method, we will need to see the name of the variable
  belonging to an interface as the mouse hovers over. Add this tool tip
  support (doubt I can use JToolTip).


* Response of variables to being clicked - eg, prep the popup menu for
  variable actions. This is the general category of variable
  manipulation.

* The <NumberInfo/> minVal and MaxVal attributes aren't being used in
  the Attributes dialog - any number is okay, even though two of the
  attributes are conductance and capacitance which are
  non-negative. This is the general category of attribute validation.

* There should also be a right click option on the network browser to
edit the item selected (ie to return to the attributes dialog). Ie., add
a properties editor, which may or maynot be the same thing as the
initial attributes editor dialog displayed when a node is first created.

* As I said before, it would be nice to have a text printout in the
types browser for the nodes.

* The repainting in the NetworkBrowser is very inefficient. Currently
  clip regions are not being used, which means repaint requests result
  in a larger that necessary area being repainted.

* Currentlty the GUI will complain if the root node does not contain a
  variable - seems to complain when it attempts to display the node.

* ReplyCSL message object cannot be given a CSL data object - so
  currently in the NJF there is no way to send CSL information in a
  message.

* Upgrade the NJF to be able to handle multiple ports

* Upgrade the NRJ to be able to specify the FIFO ports at the command
  line (like the nsim does)

----------------------------------------------------------------------
LOW PRIORITY
----------------------------------------------------------------------

* The properties table, in the edit dialog, allows the left-hand
  fieldname columns to be selected for input (both by clicking and
  pressing tab). Fix this; the user should not be able to move the focus
  to the left-hand column.

* When loading an XML file, if there are not NRS components available, a
  warning is logged. This should also cause a message box to appear.

* Add, to the status bar, a pair of icons - one indicating a warning,
  the other an error - that light up when the logger has encountered a
  warning or error. Click these icons resets them.

* When a ReplyCType is used to load a CSL, the GUI should compare the
  version numbers in the ReplyCType and the stored CSL - if they
  don't match, then a warning should be generated.

* Toolbox windows are always appearing ontop of the node browser

* Network navigator window (JTree view on the network)

* Zoomed out view of the current network level - for an example, view
  the JGraph examples on the JGraph home page, or also try running
  JGraphPad. Basically the zoomed out view is a separate toolbox window
  which shows the complete network in minature, together with a
  rectangle indicating where the currently selected Network browser is
  positioned at.

* It would also be nice in the Attributes dialog to have a description
of the type you are clicked on, and the information on where that gets
used.


* The javadoc usage by the makefile is not including java files in
  subdirectories two levels or more below nrs/

* BUG-FIX: Object layering not working for variables. Cannot do a
  send-to-back on a collection of variable that have not had their
  layers previously adjusted.

* BUG-AVOID: Make a check for variables within a Node that share either
  the same Name or DisplayName, since the latter especially if often
  used for JMenuItem text and event detection in the callback. For that
  to work, the variables must all be unique.

* BUG: the object stacking is nolonger working in the network browsers

(END)
